[root@ip-172-31-3-174 srini]# cat ec2.tf
resource "aws_instance" "web" {
  ami           = "ami-078296f82eb463377"
  instance_type = "t2.micro"
  key_name = "tokyo"

  tags = {
    Name = "srini1"
  }
}
resource "aws_instance" "web1" {
  ami           = "ami-078296f82eb463377"
  instance_type = "t2.micro"
  key_name = "tokyo"

  tags = {
    Name = "srini2"
  }
}



terraform destroy --target=aws_instance.web


[root@ip-172-31-0-131 vasu]# cat ec2.tf
resource "aws_instance" "web1" {
  ami           = "ami-078296f82eb463377"
  instance_type = "t2.micro"
  key_name = "tokyo"

  tags = {
    Name = "srini2"
  }
}
output "myprivatedns" {
  value = aws_instance.web1.private_ip
}
resource "aws_eip" "lb" {
  instance = aws_instance.web1.id
  vpc      = true
}
resource "aws_security_group" "allow_tls" {
  name        = "vasu"

  ingress {
    from_port        = 443
    to_port          = 443
    protocol         = "tcp"
    cidr_blocks = ["${aws_eip.lb.public_ip}/32"]
  }
}
resource "aws_network_interface_sg_attachment" "sg_attachment" {
  security_group_id    = aws_security_group.allow_tls.id
  network_interface_id = aws_instance.web1.primary_network_interface_id
}

[root@ip-172-31-0-131 vasu]#


variable.tf


[root@ip-172-31-0-131 vasu]# cat variables.tf
variable "myip" {
  default     = "35.79.191.196/32"
}
[root@ip-172-31-0-131 vasu]#


terraform plan -var="myip=30.20.5.2/32"


export TF_VAR_myip=80.204.5/32
echo $TF_VAR

cli , tfvars , enviromentvariable , default 





